<?php

/* $Id$ */

require("mysql.inc.php");
require("common.inc.php");
require("art_headers.inc.php");
require("art_listings.inc.php");

// superglobals stuff
$page = validate_input_regexp_default ($_GET["page"], "^[0-9]+$", 1);
$sort_by = validate_input_array_default ($_GET["sort_by"], array ("name","date","popularity"), "date");
$thumbnails_per_page = validate_input_regexp_default ($_GET["thumbnails_per_page"], "^[0-9]+$", 12);
$view = validate_input_array_default ($_GET["view"], array ("list","icons"), "list");
list($foo, $unvalidated_author, $unvalidated_list) = explode("/", $_SERVER["PATH_INFO"]);

$list = validate_input_array_default ($unvalidated_list, array('themes', 'backgrounds','screenshots','contests'), '');


/* print out the list of authors */
if ($unvalidated_author == "")
{
	
	art_header("Users");
	create_title("Users", "The people creating the artwork");
	print ("<p type=\"info\">Sorry, currently disabled.</p>");
	art_footer ();
	die();
	$author_list_result = mysql_query("SELECT user.userID,user.username FROM user,theme,background WHERE active = 1 AND (user.userID = theme.userID OR user.userID = background.userID) GROUP BY user.userID ORDER BY username ASC");
	print("<ul>\n");
	while (list($userID, $username) = mysql_fetch_row($author_list_result))
	{
		print("\t<li><a href=\"/users/$userID\">$username</a></li>\n");
	}
	print("</ul>\n");
	art_footer();

}
else
{
	if (is_numeric($unvalidated_author))
		$authorID = validate_input_regexp_error ($unvalidated_author, "^[0-9]+$");
	else {
		$username = escape_string($unvalidated_author);
	}
	if (($authorID != "") || $username != '') {
		if ($authorID != "") {
			$author_result = mysql_query ("SELECT realname,username AS username,email,homepage,info,location FROM user WHERE userID = $authorID");
			$userID = $authorID;
		} else {
			$author_result = mysql_query ("SELECT userID,realname,email,homepage,info,location FROM user WHERE `username` = '$username'");
		}
		
		if(mysql_num_rows($author_result) == 1)
		{
			extract(mysql_fetch_array($author_result));
			$email = spam_proof_email ($email);
			$realname = htmlentities ($realname);
			
			art_header($realname);
			if ($userID == $_SESSION['userID'])
				create_title ($realname, "<a href=\"/account.php\">Edit</a> your profile.");
			else
				create_title ($realname, "");
			if($info)
				print ("<p>$info</p>\n");
			if($email || $homepage || $location)
				$table = 1;
			if ($table)
				print("<table>\n");
			if($email) {
				print("\t<tr><td><img src=\"/images/site/stock_mail.png\" alt=\"e-mail\" /></td>\n");
				print("\t\t<td><a href=\"mailto:$email\">$email</a></td></tr>\n");
			}	
			if($homepage) {
				if (!preg_match ('/^http:\/\/.*$/', $homepage))
					$homepage = 'http://'.$homepage;
				print("\t<tr><td><img src=\"/images/site/stock_home.png\" alt=\"homepage\" /></td>\n");
				print("\t\t<td><a href=\"$homepage\">$homepage</a></td></tr>\n");
			}
			if($location) {
				print("\t<tr><td><img src=\"/images/site/stock_home.png\" alt=\"location\" /></td>\n");
				print("\t\t<td>$location</td></tr>\n");
			}
			if($table)
				print("</table>\n");

			$links = '<div style="text-align:center; margin:1em;">'
				.'<a href="/users/'.$username.'/">Info</a> &middot; '
				.'<a href="/users/'.$username.'/themes/">Themes</a> &middot; '
				.'<a href="/users/'.$username.'/backgrounds/">Backgrounds</a> &middot; '
				.'<a href="/users/'.$username.'/contests/">Contests</a> &middot; '
				.'<a href="/users/'.$username.'/screenshots/">Screenshots</a></div>';

			$page_title = ucfirst ($list);
			if ($page_title == '')
				$page_title = 'Info';
			$links = str_replace ($page_title, "<b>$page_title</b>", $links);
			print ($links);

			if ($list != '')
			{
				switch ($list)
				{
					case 'contests': $item_list = new user_contest_list; break;
					case 'themes': $item_list = new user_theme_list; break;
					case 'backgrounds': $item_list = new user_background_list; break;
					case 'screenshots': $item_list = new user_screenshot_list; break;
				}
				$item_list->select ($userID);
				$item_list->print_listing ($realname);
			}
			else
			{
				$username = htmlentities (ucfirst ($username));
				print ('<div style="float: left; width: 49%;">');
				print ('<h1>'.$username.'\'s Favourite Items</h1>');
				print ('<div class="subtitle">'.$username.'\' top rated items</div>');
				$listing = new top_rated_list;
				$listing->select ($userID);
				$listing->print_listing ();
				print ('</div>');

				print ('<div style="float: right; width: 49%;">');
				print ('<h1>'.$username.'\'s Comments</h1>');
				print ('<div class="subtitle">'.$username.'\' Latest Comments</div>');
				$comment_select_result = mysql_query ("SELECT commentID, artID, type, timestamp, comment FROM comment WHERE userID = $userID ORDER BY timestamp DESC LIMIT 10");
				$template = new template ('comments/display.html');
				while(list ($commentID, $comment_artID, $comment_type, $comment_time, $comment) = mysql_fetch_row($comment_select_result))
				{
					$result = mysql_query ("SELECT category, name FROM $comment_type WHERE {$comment_type}ID = $comment_artID");
					list ($comment_art_category, $comment_art_name) = mysql_fetch_row ($result);
					print ("<strong>Comment for <a href=\"/{$comment_type}s/$comment_art_category/$comment_artID\">$comment_art_name</a></strong><br/>");
					print ('<span class="subtitle">'.FormatRelativeDate (time (), $comment_time) .'</span>');
					print ('<p style="margin:0px 0px 1em 0px;">'.$comment.'</p>');
				}
			}
			art_footer();
		}
		else
		{
			art_file_not_found();
		}
	}
	else
	{
		art_file_not_found();
	}
}

?>
